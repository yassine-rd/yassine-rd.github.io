[{"content":"Personal Projects PaperWhiz - NLP-based recommender system Apr. - Jun. 2023, Python\nGithub : https://github.com/yassine-rd/PaperWhiz\nReport : https://github.com/yassine-rd/PaperWhiz/blob/master/assets/pdf/report.pdf\nWeb app : https://paperwhiz.streamlit.app/\nIn this project, I developed an NLP-based paper recommender system designed to recommend germane scientific papers tailored to a user\u0026rsquo;s specific interests.\nPapers are scraped from \u0026ldquo;cs.CV\u0026rdquo;, \u0026ldquo;stat.ML\u0026rdquo;, \u0026ldquo;cs.LG\u0026rdquo; and \u0026ldquo;cs.AI\u0026rdquo; sections on the arXiv website, using the arXiv Python library that provides a wrapper around the original arXiv API. EDA, data processing, and feature engineering are used to produce the best text data for the embedding process. Hugging Face Sentence Transformer (all-MiniLM-L6-v2) is used to embed the text data with PyTorch. The similarity between papers is calculated using cosine similarity, once by comparing titles and once by comparing abstracts. Once similarity scores are calculated, the top 4 most similar papers will be recommended to the user, along with their abstracts and links to the full text. Pipelines are set up to scrape new papers from the arXiv website every month, re-embed the new data collected when the pipeline is triggered, and re-train the model to keep it up to date using Github Actions and Hopsworks, leveraging its feature store and model registry. Web application is built using Streamlit to interact with the recommender system and deployed on Streamlit Sharing. Evaluation will be done using the Trubrics feedback component with Streamlit, enabling the collection of user feedback on paper recommendations. \u003c!DOCTYPE HTML\u003e Movie Sentiment Analysis Feb. - Mar. 2023, Python\nGithub : https://github.com/yassine-rd/movie-sentiment-analysis\nReport : https://github.com/yassine-rd/movie-sentiment-analysis/blob/master/assets/pdf/report.pdf\nWeb app : https://movie-sentiment.streamlit.app/\nThis project consists of building a movie sentiment analysis system leveraging user criticsâ€™ reviews.\nWhat I did:\nImplemented a multinomial Naive Bayes algorithm to accurately classify movie reviews as either positive or negative using scikit-learn. Embedded over 200,000 movie reviews using TF-IDF for feature extraction. Obtained an average precision of 86.3% on the IMDb dataset. Deployed the model in a Python web application using Streamlit, which has been containerized with Docker. My Personal Website Jun. 2022 - Now, HTML, CSS, JavaScript\nGithub : https://github.com/yassine-rd/yassine-rd.github.io\nThis website is based on Hugo and uses PaperMod theme. Graduate Projects Fish detection, tracking and counting using YOLOv4 and Darknet Sep. - Feb. 2023, Python, C++\nGithub : https://github.com/yassine-rd/movie-sentiment-analysis\nIn this project, I built a computer vision system for tracking and counting two distinct fish species within an aquarium, using the YOLOv4 and YOLOv4-tiny object detection algorithms.\nWhat I did :\nFine-tuned state-of-the-art pre-trained YOLOv4 model using the Darknet framework. Developed algorithms for building the model and running inference model using TensorFlow. Attained a mean average precision (mAP) of 93%. Deployed the model on a Raspberry Pi using TensorFlow Lite. Performed AI model quantization for edge devices to optimize computational efficiency and model size. \u003c!DOCTYPE HTML\u003e Bird recognition using deep learning-based methods Mar. - Jun. 2023, Python\nGithub : https://github.com/yassine-rd/bird_species_classification\nThis project consists of building a simple web app to recognize and classify birds through photographs using CNNs.\nWhat I did:\nTrained a CNN with 4+ million parameters from scratch. Fine-tuned the VGG16 pre-trained model for the bird classification task. Achieved a final precision of 92% on the BIRDS 525 data set. Developed a REST API using Python and Flask to deploy the classification model. ","permalink":"https://yassine-rodani.info/projects/","summary":"Personal Projects PaperWhiz - NLP-based recommender system Apr. - Jun. 2023, Python\nGithub : https://github.com/yassine-rd/PaperWhiz\nReport : https://github.com/yassine-rd/PaperWhiz/blob/master/assets/pdf/report.pdf\nWeb app : https://paperwhiz.streamlit.app/\nIn this project, I developed an NLP-based paper recommender system designed to recommend germane scientific papers tailored to a user\u0026rsquo;s specific interests.\nPapers are scraped from \u0026ldquo;cs.CV\u0026rdquo;, \u0026ldquo;stat.ML\u0026rdquo;, \u0026ldquo;cs.","title":"Projects"},{"content":"class Me: def __init__(self): self.name = \u0026#34;Yassine Rodani\u0026#34; self.born_year = 2000 self.hometown = \u0026#34;Tangier, Morocco\u0026#34; self.curr_location = \u0026#34;Strasbourg, France\u0026#34; self.grad_school = \u0026#34;ENSISA, Univeristy of Upper Alsace\u0026#34; self.degree = \u0026#34;Engineer\u0026#39;s Degree\u0026#34; self.major = \u0026#34;Computer Science\u0026#34; self.specialization = \u0026#34;Machine Learning\u0026#34; self.interests = [\u0026#34;Human-Computer Interactions\u0026#34;, \u0026#34;Explainable AI\u0026#34;, \u0026#34;Football\u0026#34;] self.inspirations = [\u0026#34;Biotechnology\u0026#34;, \u0026#34;Decentralized AI\u0026#34;] ","permalink":"https://yassine-rodani.info/about/","summary":"class Me: def __init__(self): self.name = \u0026#34;Yassine Rodani\u0026#34; self.born_year = 2000 self.hometown = \u0026#34;Tangier, Morocco\u0026#34; self.curr_location = \u0026#34;Strasbourg, France\u0026#34; self.grad_school = \u0026#34;ENSISA, Univeristy of Upper Alsace\u0026#34; self.degree = \u0026#34;Engineer\u0026#39;s Degree\u0026#34; self.major = \u0026#34;Computer Science\u0026#34; self.specialization = \u0026#34;Machine Learning\u0026#34; self.interests = [\u0026#34;Human-Computer Interactions\u0026#34;, \u0026#34;Explainable AI\u0026#34;, \u0026#34;Football\u0026#34;] self.inspirations = [\u0026#34;Biotechnology\u0026#34;, \u0026#34;Decentralized AI\u0026#34;] ","title":"About me"}]